var livecode_options =  {"runtime": "python", "code": "import time\nimport json\n\ndef sendmsg(msgtype, **kwargs):\n  \"\"\"Sends a message to the frontend.\n\n  The frontend will receive the specified message whenever\n  this function is called. The frontend can decide to some\n  action on each of these messages.\n  \"\"\"\n  msg = dict(msgtype=msgtype, **kwargs)\n  print(\"--MSG--\", json.dumps(msg))\n\ndef circle(x=0, y=0, r=50, fill=\"none\", stroke=\"black\"):\n    sendmsg(\"draw\", shape=\"circle\", args=locals())\n\ndef rectangle(x=0, y=0, w=200, h=100, fill=\"none\", stroke=\"black\"):\n    sendmsg(\"draw\", shape=\"rectangle\", args=locals())\n\ndef show():\n    \"\"\"shows the image drawn so far.\n\n    Having explicit show enables the js driver to use double buffering.\n    \"\"\"\n    sendmsg(\"show\")\n\nwidth = 800\nheight = 400\n\ndx = 5\ndy = 5\nx, y = 400, 300\nr = 25\n\nwhile True:\n    circle(x=x, y=y, r=r, fill=\"red\")\n    show()\n    x += dx\n    y += dy\n    if x-r < 0:\n        x = r\n        dx *= -1\n    elif x+r > width:\n        x = width-r\n        dx *= -1\n\n    if y-r < 0:\n        y = r\n        dy *= -1\n    elif y+r > height:\n        y = height-r\n        dy *= -1\n\n    print(x, dx, y, dy)\n\n    time.sleep(1/30) # 30 fps"};
